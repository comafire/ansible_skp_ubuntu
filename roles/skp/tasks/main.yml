---
- name: skp - create skp_home({{ skp_home }}), if it does not exist
  file:
    path: "{{ skp_home }}"
    state: directory
    mode: '0755'
- name: skp - check package
  stat: 
    path: "{{ skp_home }}/st-kilda-pier2-v{{ skp_ver }}.tar.gz"
  register: skp_pkg
- name: skp - copy package, if it does not exist
  copy:
    src: files/st-kilda-pier2-v{{ skp_ver }}.tar.gz
    dest: "{{ skp_home }}/st-kilda-pier2-v{{ skp_ver }}.tar.gz"
  when: not skp_pkg.stat.exists
- name: skp - untar package, if it does not exist
  unarchive:
    src: "{{ skp_home }}/st-kilda-pier2-v{{ skp_ver }}.tar.gz"
    dest: "{{ skp_home }}"
    remote_src: yes
  when: not skp_pkg.stat.exists  
- name: skp - check symlink
  stat: 
    path: "{{ skp_curr }}"
  register: skp_symlink
- name: skp - symlink skp_curr({{ skp_curr }}), if it does not exist
  file:
    src: "{{ skp_home }}/st-kilda-pier2-v{{ skp_ver }}"
    dest: "{{ skp_curr }}"
    state: link  
  when: not skp_symlink.stat.exists  
- name: skp - .envrc common
  template: src=.envrc.j2 dest={{ skp_curr }}/.envrc mode=0666 backup=yes
- name: skp - direnv allow {{ skp_curr }}
  shell: "direnv allow {{ skp_curr }}"
- name: skp - pyenv python install 
  shell: "direnv exec {{ skp_curr }} bash -c 'pyenv install $PYENV_PYVER -s'"
- name: skp - pyenv virtual env check
  shell: "direnv exec {{ skp_curr }} bash -c 'pyenv virtualenvs'"
  register: venv
- name: skp - pyenv virtual env install
  shell: "direnv exec {{ skp_curr }} bash -c 'pyenv virtualenv $PYENV_PYVER $PYENV_VENV'"
  when: venv.stdout.find(pyenv_venv) == -1
- name: skp - pip upgrade
  shell: "direnv exec {{ skp_curr }} bash -c 'pip install --upgrade pip'"
- name: skp - pip install - setuptools, invoke, wheel
  shell: "direnv exec {{ skp_curr }} bash -c 'pip install setuptools invoke wheel'"
- name: skp - pm2 check
  shell: "direnv exec {{ skp_curr }} bash -c 'npm list -g'"
  register: pm2_pkg
- name: skp - pm2 install
  shell: "direnv exec {{ skp_curr }} bash -c 'npm install -g pm2'"
  when: pm2_pkg.stdout.find('pm2@') == -1
- name: skp - yarn check
  shell: "direnv exec {{ skp_curr }} bash -c 'npm list -g'"
  register: yarn_pkg
- name: pm2 - yarn install
  shell: "direnv exec {{ skp_curr }} bash -c 'npm install -g yarn'"
  when: yarn_pkg.stdout.find('yarn@') == -1

  